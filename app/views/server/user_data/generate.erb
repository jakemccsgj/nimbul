#!/bin/bash
# No -e on purpose - otherwise things might break!!!

# Account: <%= @user_data.server.cluster.provider_account.name %> [<%= @user_data.server.cluster.provider_account.id %>]
# Cluster: <%= @user_data.server.cluster.name %> [<%= @user_data.server.cluster.id %>]
# Server: <%= @user_data.server.name %> [<%= @user_data.server.id %>]

# Make sure we deploy main key first
if [ -x /etc/init.d/ec2-get-credentials ]; then
    /etc/init.d/ec2-get-credentials
fi

# Deploy user public keys
SSH_DIR="<%= @user_home %>/.ssh"
mkdir -p $SSH_DIR
cat <<'<%= @reol %>' >> $SSH_DIR/authorized_keys
<%
    @instance_users.each_pair do |server_user, users|
      users.each do |user|
        user.user_keys.each do |key|
          unless key.public_key.blank? or key.public_key !~ /^ssh-/
  -%>
  <%= key.public_key.delete("\C-M").delete("\r").delete("\n") %>
  <%
            end
          end
        end
    end
-%>
<%= @reol %>
chmod 700 $SSH_DIR
chmod 600 $SSH_DIR/authorized_keys
chown -R <%= @instance_user %> $SSH_DIR

# Seed the /etc/hosts file
<% account = @user_data.server.cluster.provider_account -%>
cat <<'EOL' > /etc/hosts
127.0.0.1       localhost
<%#= DnsAdapter.static_dns_entries(@user_data.server.cluster.provider_account).join("\n") %>
EOL

<%= @user_data.cloudrc %>

# populate the hosts file by forcing an update
# Note: this has to be done /after/ cloudrc is built
if [ -x /root/bin/hostsfile_updater.sh ]; then
  source /etc/cloudrc
  /root/bin/hostsfile_updater.sh
fi

# Set the environment
source /etc/bashrc

# Deploy extra keys if any
if [ -x /etc/init.d/ec2-extra-keys ]; then
        /etc/init.d/ec2-extra-keys
fi

# startup scripts
<% @user_data.startup_scripts.collect{ |s| s unless s.body.blank? }.compact.each do |s| -%>
# <%= s.name %>
FILE="/tmp/$(basename $0).$RANDOM"
touch $FILE
chmod 700 $FILE
cat <<'<%= @reol %>' > $FILE
<%= s.body.delete("\C-M") %>
<%= @reol %>
$FILE
unlink $FILE
<% end -%>

emissary stop

# configure emissary
mkdir -p /etc/emissary
cat << 'EOF' > /etc/emissary/config.ini
<%= @emissary_config -%>
EOF

# restart emissary with the updated events configuration
emissary start -d

exit 0
