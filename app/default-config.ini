#
# EC2 Instance Manager configuration default parameters


[default]
# defaults to name in section heading
# in this case <name> is default because section is Pool-default
name=nil
# The logger to use
logger=file
logfile=STDOUT
# must be supplied -- no default
# job, resource, or default
policy=nil
# how often policy is evaluated
policy_interval=60
# status parser
status_parser=std
# how often queue is monitored
poll_interval=5  
# howmany status and log messages received at once
receive_count=20
# work queue name
# default name comes from heading: work-<name}
work_queue_name=nil
# status queue name
# default name comes from heading: status-<name>
status_queue_name=nil
# store active-set updates in this S3 bucket
# default comes from aws_bucket in AWS section above
active_set_bucket=nil
# the key to use for storing active-set entries in S3
# the default is build from aws_user in AWS section: active-set/<name>-instances
active_set_key=nil
# if enabled, active set is written this often (minutes)
active_set_interval=1
# by default, active set is disabled
active_set_type=none
# the name of the image to start
# default is build from AWS entries: <aws_user>-ami-<name>-<aws-env>
ami_name=nil
# the keypair to use
# default is built from the aws_key in the AWS section: <keypair-name>
key_pair_name=nil
security_groups=[ ]
instance_type="m1.small"
# the user data sent to the instance when it starts
# the default containes the aws_env, the aws_access_key and the
# aws_secret_key
# given in hash notation in quotes: "{:key1 => value1, :key2 => value2}"
user_data={}
# the time (in minutes) between checking instances
audit_instance_interval=1
# maximum number of instances allowed
maximum_number_of_instances=2
# minimum number of instances allowed
minimum_number_of_instances=0
# the maximum instances started in one policy interval
start_limit=1
# the minimum instance lifetime, in minutes
minimum_lifetime=55
# the maximum number of instances to stop in one policy interval
stop_limit=1
# if no status is received for this time (in minutes) then
# the instance is considered dead can will be stopped
watchdog_interval=10
# in job policy, if work queue size is greater than 
# start_threshold * number of
start_threshold=2
#in job policy, if more than idle_threshold active instances 
# with load 0 exist, stop some of them
idle_threshold=1
# in resource policy, the limits that it tries
# to keep servers within
target_upper_load=0.75
target_lower_load=0.25
# in resource policy, divide the queue depth by this
# factor to get the number of new servers needed
queue_load_factor=2
# in resource policy, the minimum load on  shutdown
# server before it is stopped
shut_down_threshold=0
# how long to wait after shutdown before termination
# in minutes
shut_down_interval=60
# how often to give summary (depth/instances/load)
# default of 0 means give every poll_interval
summary_interval=0
# how often to vie instance reports
instance_report_interval=60
# if set, it is a patname to a directory where individual log files
# are written for each instance
instance_log=""
