#!/usr/bin/ruby
$:.unshift File.join(File.dirname(__FILE__))
require 'AWS/ELB'
require 'basic_configuration'
require 'aws_context'
require 'pp'

# $Id$
# List all load balancers.
# If a pattern is supplied, it is used to filter the output.

if ARGV[0] == '-?'
  puts "usage: list-load-balancers [pattern]"
  exit 1
end

if ARGV.size > 0 then
  filter=Regexp.new(ARGV[0])
else
  filter=Regexp.new('.*')
end

Signal.trap("INT") do
  exit 2
end

config = BasicConfiguration.new
elb = AwsContext.instance.elb(*config.keys)

begin
  balancers = elb.describe_load_balancers({})
  balancers.each do |balancer|
    if balancer.load_balancer_name =~ filter or balancer.d_n_s_name =~ filter
      puts "#{balancer.load_balancer_name} #{balancer.d_n_s_name}"
      puts "    zones #{balancer.availability_zones.join(',')}"
      balancer.listeners.each do |l|
        puts "    listener #{l.load_balancer_port} #{l.instance_port} #{l.protocol}"
      end
      puts "    instances #{balancer.instances.join(',')}" unless balancer.instances.nil?
    end
  end
rescue
  puts "error #{$!}"
  exit 1
end
