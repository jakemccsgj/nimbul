#!/usr/bin/ruby
$:.unshift File.join(File.dirname(__FILE__))
require 'AWS/AS'
require 'basic_configuration'
require 'aws_context'
require 'pp'

if ARGV[0] == '-?' || ARGV[0] == '--help' || ARGV[0] == '-h' || ARGV.size < 2
    usage = "usage: as-set-desired-capacity AutoScalingGroupName --desired-capacity value"
    about = "Set the desired capacity of the specified auto scaling group (within the range of group's minimum and maximum size)."
    puts usage
    puts about
    exit 1
end

Signal.trap("INT") do
    exit 2
end

options = {}
options[:auto_scaling_group_name]=ARGV.shift

while ARGV.size > 0
    if ARGV.shift == '--desired-capacity'
        options[:desired_capacity] = ARGV.shift
    end
end

config = BasicConfiguration.new
as = AwsContext.instance.as(*config.keys)
begin
    result = as.create_desired_capacity(options)
    groups = as.describe_auto_scaling_groups({})
    groups.each do |group|
        if group.auto_scaling_group_name == options[:auto_scaling_group_name]
            puts "#{group.auto_scaling_group_name} configuration:#{group.launch_configuration_name} zones:#{group.availability_zones.join(',')} min:#{group.min_size} max:#{group.max_size} desired:#{group.desired_capacity} cooldown:#{group.cooldown}s"
        end
    end
rescue
    puts "error: #{$!}"
    exit 1
end

exit 0
